<?php
session_start();
require_once '../config/database.php';
require_once '../config.php';
require_once '../includes/functions.php';

// ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå admin
if (!isset($_SESSION['user_id']) || $_SESSION['role'] !== 'admin') {
    http_response_code(403);
    echo json_encode(['success' => false, 'message' => '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á']);
    exit;
}

header('Content-Type: application/json; charset=utf-8');

try {
    $org_config = getOrganizationConfig();
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö POST data
    if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
        throw new Exception('Method not allowed');
    }
    
    // ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°
    $start_date = $_POST['start_date'] ?? date('Y-m-d');
    $end_date = $_POST['end_date'] ?? date('Y-m-d');
    $report_type = $_POST['report_type'] ?? 'summary';
    $recipient = $_POST['recipient'] ?? 'all';
    $selected_users = $_POST['selected_users'] ?? [];
    $quick_type = $_POST['quick_type'] ?? null;
    
    // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö quick actions
    if ($quick_type) {
        switch ($quick_type) {
            case 'today':
                $start_date = $end_date = date('Y-m-d');
                $report_type = 'summary';
                $recipient = 'all';
                break;
            case 'pending':
                $start_date = $end_date = date('Y-m-d');
                $report_type = 'pending_only';
                $recipient = 'managers';
                break;
        }
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    if (!preg_match('/^\d{4}-\d{2}-\d{2}$/', $start_date) || !preg_match('/^\d{4}-\d{2}-\d{2}$/', $end_date)) {
        throw new Exception('‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ start_date <= end_date
    if ($start_date > $end_date) {
        throw new Exception('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î');
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 30 ‡∏ß‡∏±‡∏ô
    $date_diff = (strtotime($end_date) - strtotime($start_date)) / (60 * 60 * 24);
    if ($date_diff > 30) {
        throw new Exception('‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡πÄ‡∏Å‡∏¥‡∏ô 30 ‡∏ß‡∏±‡∏ô');
    }
    
    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    $stmt = $pdo->prepare("
        SELECT b.*, r.room_name, r.room_code, u.fullname, u.department, u.position,
               a.fullname as approved_by_name
        FROM bookings b 
        JOIN rooms r ON b.room_id = r.room_id 
        JOIN users u ON b.user_id = u.user_id 
        LEFT JOIN users a ON b.approved_by = a.user_id
        WHERE b.booking_date BETWEEN ? AND ? 
        ORDER BY b.booking_date, b.start_time, r.room_name
    ");
    $stmt->execute([$start_date, $end_date]);
    $bookings = $stmt->fetchAll();
    
    // ‡πÅ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    $approved_bookings = array_filter($bookings, function($b) { return $b['status'] === 'approved'; });
    $pending_bookings = array_filter($bookings, function($b) { return $b['status'] === 'pending'; });
    $rejected_bookings = array_filter($bookings, function($b) { return $b['status'] === 'rejected'; });
    $cancelled_bookings = array_filter($bookings, function($b) { return $b['status'] === 'cancelled'; });
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    $message = generateTelegramMessage($org_config, $start_date, $end_date, $bookings, $approved_bookings, $pending_bookings, $rejected_bookings, $cancelled_bookings, $report_type);
    
    // ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö
    $recipients_list = getRecipientsList($pdo, $recipient, $selected_users);
    
    if (empty($recipients_list)) {
        throw new Exception('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°');
    }
    
    // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏ô
    $success_count = 0;
    $total_count = count($recipients_list);
    $errors = [];
    
    foreach ($recipients_list as $user) {
        try {
            // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Telegram ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô)
            $result = sendTelegramMessage($message);
            
            if ($result['ok'] ?? false) {
                $success_count++;
                
                // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å log ‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á
                $date_range = $start_date === $end_date ? $start_date : "{$start_date} ‡∏ñ‡∏∂‡∏á {$end_date}";
                logActivity($pdo, $_SESSION['user_id'], 'telegram_sent', 
                    "‡∏™‡πà‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á {$date_range} ‡∏ñ‡∏∂‡∏á {$user['fullname']} ({$user['username']})");
            } else {
                $errors[] = "‡∏™‡πà‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {$user['fullname']} - " . ($result['description'] ?? 'Unknown error');
            }
        } catch (Exception $e) {
            $errors[] = "‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {$user['fullname']} - " . $e->getMessage();
        }
        
        // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á
        usleep(500000); // 0.5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    }
    
    // ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    if ($success_count > 0) {
        echo json_encode([
            'success' => true,
            'message' => "‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à {$success_count} ‡∏à‡∏≤‡∏Å {$total_count} ‡∏Ñ‡∏ô",
            'recipients' => $success_count,
            'total' => $total_count,
            'errors' => $errors
        ]);
    } else {
        throw new Exception('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢: ' . implode(', ', $errors));
    }
    
} catch (Exception $e) {
    echo json_encode([
        'success' => false,
        'message' => $e->getMessage()
    ]);
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° Telegram
 */
function generateTelegramMessage($org_config, $start_date, $end_date, $all_bookings, $approved, $pending, $rejected, $cancelled, $type) {
    $message = "üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°\n";
    $message .= "üè¢ {$org_config['name']}\n";
    
    if ($start_date === $end_date) {
        $thai_date = formatThaiDate($start_date, 'full');
        $message .= "ÔøΩ {$thai_date}\n\n";
    } else {
        $thai_start = formatThaiDate($start_date, 'full');
        $thai_end = formatThaiDate($end_date, 'full');
        $message .= "üìÖ ‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: {$thai_start} ‡∏ñ‡∏∂‡∏á {$thai_end}\n\n";
    }
    
    // ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏ß‡∏°
    $message .= "üìà ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥:\n";
    $message .= "‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß: " . count($approved) . " ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n";
    $message .= "‚è≥ ‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥: " . count($pending) . " ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n";
    $message .= "‚ùå ‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥: " . count($rejected) . " ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n";
    $message .= "üö´ ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å: " . count($cancelled) . " ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n";
    $message .= "üî¢ ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: " . count($all_bookings) . " ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n\n";
    
    switch ($type) {
        case 'detailed':
            $message .= generateDetailedReport($all_bookings);
            break;
        case 'pending_only':
            $message .= generatePendingReport($pending);
            break;
        case 'approved_only':
            $message .= generateApprovedReport($approved);
            break;
        default: // summary
            $message .= generateSummaryReport($approved, $pending);
            break;
    }
    
    $message .= "\n‚è∞ ‡∏™‡πà‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: " . date('d/m/Y H:i:s') . " ‡∏ô.\n";
    $message .= "üë§ ‡∏™‡πà‡∏á‡πÇ‡∏î‡∏¢: " . ($_SESSION['username'] ?? 'System');
    
    return $message;
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
 */
function generateDetailedReport($bookings) {
    if (empty($bookings)) {
        return "üìã ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å\n";
    }
    
    $message = "üìã ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á:\n\n";
    
    // ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    $bookings_by_date = [];
    foreach ($bookings as $booking) {
        $date = $booking['booking_date'];
        if (!isset($bookings_by_date[$date])) {
            $bookings_by_date[$date] = [];
        }
        $bookings_by_date[$date][] = $booking;
    }
    
    $total_count = 0;
    foreach ($bookings_by_date as $date => $day_bookings) {
        $thai_date = formatThaiDate($date, 'full');
        $message .= "üìÖ {$thai_date} (" . count($day_bookings) . " ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£):\n";
        
        foreach ($day_bookings as $i => $booking) {
            $total_count++;
            $status_icon = [
                'approved' => '‚úÖ',
                'pending' => '‚è≥',
                'rejected' => '‚ùå',
                'cancelled' => 'üö´'
            ][$booking['status']] ?? '‚ùì';
            
            $message .= "   {$status_icon} {$booking['room_name']}\n";
            $message .= "      üïê " . date('H:i', strtotime($booking['start_time'])) . 
                       " - " . date('H:i', strtotime($booking['end_time'])) . "\n";
            $message .= "      üë§ {$booking['fullname']}\n";
            $message .= "      üèõÔ∏è {$booking['department']}\n";
            
            if (!empty($booking['purpose'])) {
                $purpose = mb_substr($booking['purpose'], 0, 50, 'UTF-8');
                if (mb_strlen($booking['purpose'], 'UTF-8') > 50) $purpose .= '...';
                $message .= "      üìù {$purpose}\n";
            }
            
            $message .= "\n";
        }
        $message .= "\n";
    }

    if ($total_count > 0) {
        $message .= "üìà ‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {$total_count} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n";
    }
    
    return $message;
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
 */
function generatePendingReport($pending) {
    if (empty($pending)) {
        return "üéâ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥\n";
    }
    
    $message = "‚è≥ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥ (" . count($pending) . " ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£):\n\n";
    
    foreach ($pending as $i => $booking) {
        $message .= ($i + 1) . ". üè† {$booking['room_name']}\n";
        $message .= "   üïê " . date('H:i', strtotime($booking['start_time'])) . 
                   " - " . date('H:i', strtotime($booking['end_time'])) . "\n";
        $message .= "   üë§ {$booking['fullname']} ({$booking['department']})\n";
        
        if (!empty($booking['purpose'])) {
            $purpose = mb_substr($booking['purpose'], 0, 40, 'UTF-8');
            if (mb_strlen($booking['purpose'], 'UTF-8') > 40) $purpose .= '...';
            $message .= "   üìù {$purpose}\n";
        }
        
        $message .= "\n";
    }
    
    $message .= "‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á\n";
    
    return $message;
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß
 */
function generateApprovedReport($approved) {
    if (empty($approved)) {
        return "üìã ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß\n";
    }
    
    $message = "‚úÖ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß (" . count($approved) . " ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£):\n\n";
    
    // ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏ï‡∏≤‡∏°‡∏´‡πâ‡∏≠‡∏á
    $rooms = [];
    foreach ($approved as $booking) {
        $rooms[$booking['room_name']][] = $booking;
    }
    
    foreach ($rooms as $room_name => $room_bookings) {
        $message .= "üè† {$room_name}:\n";
        
        foreach ($room_bookings as $booking) {
            $message .= "   ‚Ä¢ " . date('H:i', strtotime($booking['start_time'])) . 
                       "-" . date('H:i', strtotime($booking['end_time'])) . 
                       " | {$booking['fullname']}\n";
        }
        $message .= "\n";
    }
    
    return $message;
}

/**
 * ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö‡∏™‡∏£‡∏∏‡∏õ
 */
function generateSummaryReport($approved, $pending) {
    $message = "";
    
    if (!empty($approved)) {
        $message .= "‚úÖ ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß:\n";
        foreach ($approved as $booking) {
            $message .= "‚Ä¢ {$booking['room_name']} | " . 
                       date('H:i', strtotime($booking['start_time'])) . 
                       "-" . date('H:i', strtotime($booking['end_time'])) . 
                       " | {$booking['fullname']}\n";
        }
        $message .= "\n";
    }
    
    if (!empty($pending)) {
        $message .= "‚è≥ ‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥:\n";
        foreach ($pending as $booking) {
            $message .= "‚Ä¢ {$booking['room_name']} | " . 
                       date('H:i', strtotime($booking['start_time'])) . 
                       "-" . date('H:i', strtotime($booking['end_time'])) . 
                       " | {$booking['fullname']}\n";
        }
        $message .= "\n";
    }
    
    if (empty($approved) && empty($pending)) {
        $message .= "üìã ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å\n";
    }
    
    return $message;
}

/**
 * ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö
 */
function getRecipientsList($pdo, $recipient, $selected_users = []) {
    switch ($recipient) {
        case 'all':
            $stmt = $pdo->prepare("SELECT user_id, username, fullname, role FROM users WHERE is_active = 1");
            $stmt->execute();
            break;
        case 'admins':
            $stmt = $pdo->prepare("SELECT user_id, username, fullname, role FROM users WHERE is_active = 1 AND role = 'admin'");
            $stmt->execute();
            break;
        case 'managers':
            $stmt = $pdo->prepare("SELECT user_id, username, fullname, role FROM users WHERE is_active = 1 AND role IN ('admin', 'manager')");
            $stmt->execute();
            break;
        case 'custom':
            if (empty($selected_users)) {
                return [];
            }
            $placeholders = str_repeat('?,', count($selected_users) - 1) . '?';
            $stmt = $pdo->prepare("SELECT user_id, username, fullname, role FROM users WHERE is_active = 1 AND user_id IN ({$placeholders})");
            $stmt->execute($selected_users);
            break;
        default:
            return [];
    }
    
    return $stmt->fetchAll();
}
?>