<?php
/**
 * ไฟล์ฟังก์ชันสำคัญของระบบ - TEMPLATE
 * ระบบจองห้องประชุม เวอร์ชัน 2.2 Color Edition Pro
 * 
 * คำแนะนำ: คัดลอกไฟล์นี้เป็น functions.php และปรับแต่งตามองค์กรของคุณ
 */

/**
 * ฟังก์ชันดึงข้อมูลการตั้งค่าองค์กร
 * @return array
 */
function getOrganizationConfig() {
    return [
        'name' => 'ระบบจองห้องประชุม',
        'sub_title' => 'ระบบจองห้องประชุม',
        'address' => 'ที่อยู่องค์กรของคุณ',
        'phone' => '0XX-XXX-XXXX',
        'email' => 'contact@yourorganization.go.th',
        'website' => 'https://www.yourorganization.go.th',
        'logo_path' => 'assets/images/logo.png'
    ];
}

/**
 * ฟังก์ชันดึงชื่อองค์กร
 * @return string
 */
function getOrganizationName() {
    $config = getOrganizationConfig();
    return $config['name'];
}

/**
 * ฟังก์ชันส่งการแจ้งเตือนผ่าน Telegram
 * @param string $message
 * @param string $chat_id
 * @return bool
 */
function sendTelegramNotification($message, $chat_id = null) {
    // TODO: ใส่ Telegram Bot Token ของคุณ
    $bot_token = 'YOUR_BOT_TOKEN_HERE';
    
    if (!$bot_token || $bot_token === 'YOUR_BOT_TOKEN_HERE') {
        return false; // ยังไม่ได้ตั้งค่า Bot Token
    }
    
    if (!$chat_id) {
        // TODO: ใส่ Chat ID เริ่มต้น
        $chat_id = 'YOUR_DEFAULT_CHAT_ID';
    }
    
    $url = "https://api.telegram.org/bot{$bot_token}/sendMessage";
    $data = [
        'chat_id' => $chat_id,
        'text' => $message,
        'parse_mode' => 'HTML'
    ];
    
    $options = [
        'http' => [
            'header' => "Content-Type: application/x-www-form-urlencoded\r\n",
            'method' => 'POST',
            'content' => http_build_query($data),
        ],
    ];
    
    $context = stream_context_create($options);
    $result = file_get_contents($url, false, $context);
    
    return $result !== false;
}

/**
 * ฟังก์ชันสร้างรหัส 2FA
 * @param int $user_id
 * @return string
 */
function generate2FACode($user_id) {
    global $pdo;
    
    // สร้างรหัส 6 หลัก
    $code = sprintf('%06d', mt_rand(0, 999999));
    
    // กำหนดเวลาหมดอายุ (5 นาที)
    $expires_at = date('Y-m-d H:i:s', strtotime('+5 minutes'));
    
    // บันทึกลงฐานข้อมูล
    $stmt = $pdo->prepare("INSERT INTO two_factor_codes (user_id, code, expires_at) VALUES (?, ?, ?)");
    $stmt->execute([$user_id, $code, $expires_at]);
    
    return $code;
}

/**
 * ฟังก์ชันตรวจสอบรหัส 2FA
 * @param int $user_id
 * @param string $code
 * @return bool
 */
function verify2FACode($user_id, $code) {
    global $pdo;
    
    $stmt = $pdo->prepare("
        SELECT id FROM two_factor_codes 
        WHERE user_id = ? AND code = ? AND expires_at > NOW() AND used = 0
        ORDER BY created_at DESC LIMIT 1
    ");
    $stmt->execute([$user_id, $code]);
    
    if ($result = $stmt->fetch()) {
        // ทำเครื่องหมายว่าใช้แล้ว
        $update_stmt = $pdo->prepare("UPDATE two_factor_codes SET used = 1 WHERE id = ?");
        $update_stmt->execute([$result['id']]);
        
        return true;
    }
    
    return false;
}

/**
 * ฟังก์ชันแปลงวันที่เป็นภาษาไทย
 * @param string $date
 * @param bool $show_time
 * @return string
 */
function formatThaiDate($date, $show_time = false) {
    $thai_months = [
        1 => 'มกราคม', 2 => 'กุมภาพันธ์', 3 => 'มีนาคม', 4 => 'เมษายน',
        5 => 'พฤษภาคม', 6 => 'มิถุนายน', 7 => 'กรกฎาคม', 8 => 'สิงหาคม',
        9 => 'กันยายน', 10 => 'ตุลาคม', 11 => 'พฤศจิกายน', 12 => 'ธันวาคม'
    ];
    
    $thai_days = [
        'Sunday' => 'อาทิตย์', 'Monday' => 'จันทร์', 'Tuesday' => 'อังคาร',
        'Wednesday' => 'พุธ', 'Thursday' => 'พฤหัสบดี', 'Friday' => 'ศุกร์', 'Saturday' => 'เสาร์'
    ];
    
    $timestamp = strtotime($date);
    $day = date('j', $timestamp);
    $month = $thai_months[date('n', $timestamp)];
    $year = date('Y', $timestamp) + 543;
    $day_name = $thai_days[date('l', $timestamp)];
    
    $result = "วัน{$day_name}ที่ {$day} {$month} {$year}";
    
    if ($show_time) {
        $time = date('H:i', $timestamp);
        $result .= " เวลา {$time} น.";
    }
    
    return $result;
}

/**
 * ฟังก์ชันล็อกกิจกรรม
 * @param int $user_id
 * @param string $action
 * @param string $details
 */
function logActivity($user_id, $action, $details = '') {
    global $pdo;
    
    $ip_address = $_SERVER['REMOTE_ADDR'] ?? '';
    $user_agent = $_SERVER['HTTP_USER_AGENT'] ?? '';
    
    $stmt = $pdo->prepare("
        INSERT INTO activity_logs (user_id, action, details, ip_address, user_agent) 
        VALUES (?, ?, ?, ?, ?)
    ");
    $stmt->execute([$user_id, $action, $details, $ip_address, $user_agent]);
}

/**
 * ฟังก์ชันสร้าง Footer ของระบบ
 * @return string
 */
function getSystemFooter() {
    $config = getOrganizationConfig();
    $version_info = include __DIR__ . '/../version.php';
    
    return '
    <footer class="footer footer-center p-10 bg-base-300 text-base-content mt-10">
        <aside>
            <p class="font-bold text-lg">' . htmlspecialchars($config['name']) . '</p>
            <p>' . htmlspecialchars($config['address']) . '</p>
            <p>โทร: ' . htmlspecialchars($config['phone']) . ' | อีเมล: ' . htmlspecialchars($config['email']) . '</p>
            <p class="text-sm opacity-75">เวอร์ชัน ' . SYSTEM_VERSION . ' ' . SYSTEM_CODENAME . ' | ' . DEVELOPER_TEAM . '</p>
            <p class="text-sm opacity-75">พัฒนาโดย ' . DEVELOPER_NAME . ' ' . DEVELOPER_POSITION . '</p>
        </aside>
    </footer>';
}

/**
 * ฟังก์ชันตรวจสอบสิทธิ์การเข้าถึง
 * @param array $allowed_roles
 * @return bool
 */
function checkPermission($allowed_roles = ['admin']) {
    if (!isset($_SESSION['user_id']) || !isset($_SESSION['role'])) {
        return false;
    }
    
    return in_array($_SESSION['role'], $allowed_roles);
}

/**
 * ฟังก์ชันป้องกัน XSS
 * @param string $data
 * @return string
 */
function cleanInput($data) {
    return htmlspecialchars(trim($data), ENT_QUOTES, 'UTF-8');
}

/**
 * ฟังก์ชันตรวจสอบการชนของการจอง
 * @param int $room_id
 * @param string $date
 * @param string $start_time
 * @param string $end_time
 * @param int $booking_id (สำหรับการแก้ไข)
 * @return bool
 */
function checkBookingConflict($room_id, $date, $start_time, $end_time, $booking_id = null) {
    global $pdo;
    
    $sql = "
        SELECT COUNT(*) as count 
        FROM bookings 
        WHERE room_id = ? 
        AND booking_date = ? 
        AND status IN ('approved', 'pending')
        AND (
            (start_time < ? AND end_time > ?) OR
            (start_time < ? AND end_time > ?) OR
            (start_time >= ? AND end_time <= ?)
        )
    ";
    
    $params = [$room_id, $date, $end_time, $start_time, $end_time, $end_time, $start_time, $end_time];
    
    if ($booking_id) {
        $sql .= " AND booking_id != ?";
        $params[] = $booking_id;
    }
    
    $stmt = $pdo->prepare($sql);
    $stmt->execute($params);
    
    return $stmt->fetch()['count'] > 0;
}
?>